<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Payne Blog</title>
  <subtitle>张攀</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
<<<<<<< HEAD
  <updated>2017-05-28T07:54:17.000Z</updated>
=======
  <updated>2017-06-01T03:04:47.235Z</updated>
>>>>>>> 382eb92e1e8d0ee6820320bbf9eb11225629ddd8
  <id>http://yoursite.com/</id>
  
  <author>
    <name>payne</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
<<<<<<< HEAD
    <title>SpringMVC深入解析</title>
    <link href="http://yoursite.com/2017/05/28/SpringMVC%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2017/05/28/SpringMVC深入解析/</id>
    <published>2017-05-28T07:53:43.000Z</published>
    <updated>2017-05-28T07:54:17.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="springMVC" scheme="http://yoursite.com/tags/springMVC/"/>
=======
    <title>Redis 教程</title>
    <link href="http://yoursite.com/2017/06/01/Redis-%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/06/01/Redis-教程/</id>
    <published>2017-06-01T01:31:59.000Z</published>
    <updated>2017-06-01T03:04:47.235Z</updated>
    
    <content type="html"><![CDATA[<h2>Redis 与其他 key - value 缓存产品有以下三个特点：</h2>
<ul>
<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>
<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li>
<li>Redis支持数据的备份，即master-slave模式的数据备份。</li>
</ul>
<h2>Redis优势</h2>
<ul>
<li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li>
<li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li>
<li>原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。</li>
<li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li>
</ul>
<h2>安装</h2>
<p>windows : 下载地址：<a href="https://github.com/MSOpenTech/redis/releases" target="_blank" rel="external">https://github.com/MSOpenTech/redis/releases</a>  自行选择安装<br>
linux : 下载地址：<a href="http://redis.io/download" target="_blank" rel="external">http://redis.io/download</a> 自行编译安装</p>
<h2>开启服务</h2>
<p>在安装目录运行 redis-server.exe redis.windows.conf<br>
开启控制台  redis-cli.exe -h 127.0.0.1 -p 6379<br>
然后就可以在控制台输入了，例子：<br>
set myKey hello_world<br>
get myKey<br>
此时控制将输出 hello_world</p>
<h2>Redis配置</h2>
<p>Redis的配置文件linux环境下为redis.conf, Windows环境下为redis.windows.conf
在命令模型下：<br>
获得配置信息命令<br>
CONFIG GET *   //显示所有的配置信息<br>
设置配置信息命令：<br>
CONFIG SET</p>
<h2>Redis支持的数据类型</h2>
<p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。<br>
Example：</p>
<h3>String类型</h3>
<p>string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。<br>
string类型是Redis最基本的数据类型，一个键最大能存储512MB。<br>
基本命令：
set name payne
get name
控制台输出“payne”</p>
<h3>Hash类型</h3>
<p>Redis hash 是一个键名对集合。<br>
Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。
HMSET user:1 username payne password payne
基本命令<br>
hmset
hset
hgetall
hget
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; HMSET user:1 username runoob password runoob points 200</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; HGETALL user:1</div><div class="line">1) &quot;username&quot;</div><div class="line">2) &quot;runoob&quot;</div><div class="line">3) &quot;password&quot;</div><div class="line">4) &quot;runoob&quot;</div><div class="line">5) &quot;points&quot;</div><div class="line">6) &quot;200&quot;</div></pre></td></tr></table></figure></p>
<h3>List类型</h3>
<p>Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; lpush runoob redis</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; lpush runoob mongodb</div><div class="line">(integer) 2</div><div class="line">redis 127.0.0.1:6379&gt; lpush runoob rabitmq</div><div class="line">(integer) 3</div><div class="line">redis 127.0.0.1:6379&gt; lrange runoob 0 10</div><div class="line">1) &quot;rabitmq&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;redis&quot;</div></pre></td></tr></table></figure></p>
<h3>Set 类型</h3>
<p>Redis的Set是string类型的无序集合。
集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; sadd runoob redis</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; sadd runoob mongodb</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; sadd runoob rabitmq</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; sadd runoob rabitmq</div><div class="line">(integer) 0</div><div class="line">redis 127.0.0.1:6379&gt; smembers runoob</div><div class="line">1) &quot;rabitmq&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;redis&quot;</div></pre></td></tr></table></figure></p>
<h3>zset类型（有序集合）</h3>
<p>Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
zset的成员是唯一的,但分数(score)却可以重复。</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; zadd runoob 0 redis</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; zadd runoob 0 mongodb</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; zadd runoob 0 rabitmq</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; zadd runoob 0 rabitmq</div><div class="line">(integer) 0</div><div class="line">redis 127.0.0.1:6379&gt; ZRANGEBYSCORE runoob 0 1000</div><div class="line">1) &quot;redis&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;rabitmq&quot;</div></pre></td></tr></table></figure></p>
<h2>Redis 帮助</h2>
<p>在命令行模型下输入help &lt;command&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;Redis 与其他 key - value 缓存产品有以下三个特点：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。&lt;/li&gt;
&lt;li&gt;Redis不仅仅支持简单的key-value类型的数据，同时还
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
>>>>>>> 382eb92e1e8d0ee6820320bbf9eb11225629ddd8
    
  </entry>
  
  <entry>
    <title>SpingMvc学习笔记</title>
    <link href="http://yoursite.com/2017/05/25/SpingMvc%E5%AD%A6%E4%B9%A0%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/05/25/SpingMvc学习杂记/</id>
    <published>2017-05-25T09:17:08.000Z</published>
<<<<<<< HEAD
    <updated>2017-05-28T07:48:10.000Z</updated>
=======
    <updated>2017-05-27T09:14:37.457Z</updated>
>>>>>>> 382eb92e1e8d0ee6820320bbf9eb11225629ddd8
    
    <content type="html"><![CDATA[<blockquote>
<p>本文主要记录一些比较的零散的东西</p>
</blockquote>
<ul>
<li>一
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;servlet&gt;</div><div class="line">    &lt;servlet-name&gt;springMVC&lt;/servlet-name&gt;</div><div class="line">    &lt;servlet-class&gt;</div><div class="line">       org.springframework.web.servlet.DispatcherServlet</div><div class="line">    &lt;/servlet-class&gt;</div><div class="line">    &lt;init-param&gt;</div><div class="line">   	&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</div><div class="line">   	&lt;param-value&gt;classpath:springMVC-servlet.xml&lt;/param-value&gt;</div><div class="line">   &lt;/init-param&gt;</div><div class="line">   &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</div><div class="line"> &lt;/servlet&gt;</div></pre></td></tr></table></figure></li>
</ul>
<p>这里的classpath路径指的是EB-INF/classes的目录</p>
<ul>
<li>二
通过spring注解创建的Bean，默认是单例模式<br>
如果需要多例模式用如下方式：</li>
</ul>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</div><div class="line">public class HelloService &#123;</div><div class="line">&#125;</div><div class="line">或者</div><div class="line">@Scope(&quot;prototype&quot;)</div><div class="line">public class HelloService &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文主要记录一些比较的零散的东西&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决eclipse无法创建Web Module 3.0的问题</title>
    <link href="http://yoursite.com/2017/05/24/%E8%A7%A3%E5%86%B3eclipse%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BAWeb-Module-3-0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/05/24/解决eclipse无法创建Web-Module-3-0的问题/</id>
    <published>2017-05-24T05:12:02.000Z</published>
    <updated>2017-05-28T07:48:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Eclipse 新建Maven工程选择maven-archetype-webapp新建dynamic web工程创建的工程版本比较低</p>
</blockquote>
<p>在Eclipse中把项目修改为web Moudule3.0或者更高的版本时，会有如下问题：<br>
<strong>Can not change version of project facet Dynamic web Moudule to 3.0</strong><br>
需要项目目录.setting目录的org.eclipse.wst.common.project.facet.core.xml文件
把该文件中的jst.web属性修改为3.0，然后在Eclipse中刷新工程就好</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Eclipse 新建Maven工程选择maven-archetype-webapp新建dynamic web工程创建的工程版本比较低&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在Eclipse中把项目修改为web Moudule3.0或者更高的版本
    
    </summary>
    
      <category term="Eclipse" scheme="http://yoursite.com/categories/Eclipse/"/>
    
    
      <category term="Question" scheme="http://yoursite.com/tags/Question/"/>
    
  </entry>
  
  <entry>
    <title>linux 文件系统笔记</title>
    <link href="http://yoursite.com/2017/05/21/linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/05/21/linux-文件系统笔记/</id>
    <published>2017-05-21T08:14:57.000Z</published>
    <updated>2017-05-21T09:36:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2>用户管理</h2>
<pre><code>useradd wang#添加用户wang   会自动创建用户组
adduser wang#会创建目录，组信息，useradd不会创建用户目录
tail -l /etc/passwd #查看wang用户的账户信息
tail -l /etc/group #查看用户组的账户信息
tail -l /etc/shadow #查看加密后的用户账号和密码信息
usermod #修改用户账号信息
userdel #删除用户账号 userdel -r 则一并删除用户目录
passwd wang #更改wang这个用户的密码
addgroup hadoop  #创建用户组
</code></pre>
<h2>文件目录的权限管理</h2>
<pre><code>ll 查得的权限的第一位 -表示文件 d表示目录
--- --- --- 分别对应的是文件所有者、同组用户、其他用户的权限
更改文件（目录）权限 chmod
chmod 格式
字符方式
chmod [userType] [signal] [type] [filename]
userType u(宿主) g（同组）o（其他用户）a(所有用户)
signal + - =
type  r w x
数字方式
0 无权限 1 执行权限 2 写权限 4 读权限 （注意没有3）
chmod 764 test.txt 表示此文件1.宿主有读写执行权限2.同组用户有读和写权限3.其他用户只要读权限
</code></pre>
<h2>文件查找</h2>
<pre><code>find . -name 'sql' 按名字查找sql的文件
</code></pre>
<h2>Vim编辑器</h2>
<h2>grep查询文本中包含的字符串</h2>
<pre><code>grep -n main demo1.c #查询demo.c中的是否有main字符串，并显示行号
</code></pre>
<h2>软连接与硬链接</h2>
<pre><code>ll -i(linux中，每个文件都有一个索引节点号，改名了显示index)
硬链接：硬连接指通过索引节点来进行连接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，
	称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连接。硬连接的作用是
	允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录
	的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，
	文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。
软连接：另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于Windows的快捷方式。它实际上是一个
	特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。
例子：
touch f1(新建文件f1)
ln f1 f2(linux默认是建立硬链接，表示f2指向f1的硬链接，f1 与 f2 索引节点号相同，及时删除f1,f2还是可用的)
ln -s f1 f2(f2指向f1的软连接，节点索引号不同，删除f2可以，删除f1时则不能访问f2)
</code></pre>
<p>七、查看系统安装了那些包
	dpkg -l|drep xx     //xx我包名 ubuntu
	rpm -qa|grep xx //centos 下查看安装那些包  适用于包安装 不适于编译安装</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;用户管理&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;useradd wang#添加用户wang   会自动创建用户组
adduser wang#会创建目录，组信息，useradd不会创建用户目录
tail -l /etc/passwd #查看wang用户的账户信息
tail -l 
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="linux基本命令" scheme="http://yoursite.com/tags/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>git学习笔记</title>
    <link href="http://yoursite.com/2017/05/21/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/05/21/git学习笔记/</id>
    <published>2017-05-21T02:47:51.000Z</published>
    <updated>2017-05-21T07:39:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2>首先配置自已的git</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;John Doe&quot;</div><div class="line">$ git config --global user.email johndoe@example.com</div></pre></td></tr></table></figure></p>
<h2>常用命令</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git commit --amend 撤销最近一次的修改</div><div class="line">git fetch [remote-name] 从远程仓库中抓取数据</div><div class="line">git push [remote-name] [branch-name] 将数据推送到远程的某个分支</div><div class="line">git remote add [shortname] [url]  //远程添加一个分支</div><div class="line">git remote show [remote-name] </div><div class="line">git tag -a v1.4 -m &apos;my version 1.4&apos; 打标签</div><div class="line">git show v1.4 显示v1.4这个标签的xinx</div><div class="line">git tag 查看已经打了哪些标签</div></pre></td></tr></table></figure></p>
<h2>建立新的分支</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">git branch pan //新建分支pan</div><div class="line">git checkout pan  //切到pan分支 此时HEAD指向的是pan  master指向的是建立分支之前的commit指针</div><div class="line">git checkout -b pan //新建并切换到分支pan</div><div class="line">git merge pan </div><div class="line">git branch -d pan //当某个分支问题解决了以后，就可以删除这个分支了</div><div class="line">git merge master //在某个分支上将master中的内容合并过来</div><div class="line"></div><div class="line">git branch --merged//查看已经合并的分支</div><div class="line">git branch --no-merged //查看没有合并的分支</div><div class="line"></div><div class="line">git mergetool//调用解决合并冲突的工具</div><div class="line"></div><div class="line">git fetch origin //来同步远程服务器上的数据到本地</div><div class="line"></div><div class="line">git push (远程仓库名) (分支名) //推送本地分支，这个是推送到远程的同名分支</div><div class="line">git push origin serverfix:awesomebranc//推送到远程的其他的分支</div></pre></td></tr></table></figure></p>
<h2>建立新的分支</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</div><div class="line">## example  </div><div class="line">git push origin payne:payne   //如果远程分支名不存在，则创建分支</div><div class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</div><div class="line">## example  </div><div class="line">git pull origin next:master //取回origin主机的next分支，与本地的master分支合并</div></pre></td></tr></table></figure></p>
<h2>删除远程分支develop:</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git push origin --delete develop</div><div class="line">git branch -a  查看所有的分支，包括本地和远程的</div><div class="line">git branch -r   查看远程分支</div></pre></td></tr></table></figure></p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git fetch origin dev-pan取回远程的某个分支，所取回的更新，在本地主机上要用&quot;远程主机名/分支名&quot;的形式读取。比如origin主机的master，就要用origin/master读取。</div><div class="line">git merge origin/dev-pan 在某个分支上把刚才取回的运程分支合并到现在的某个分支</div></pre></td></tr></table></figure></p>
<h2>建立裸仓,两种方法</h2>
<h3>将本地的导出为裸仓</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git clone --bare my_project my_project.git  //my_project这个仓已经存在了</div><div class="line">scp -r my_project.git user@git.example.com:/opt/git //将裸仓移到服务器上</div><div class="line">git init --bare --shared //如果对服务器上裸仓没有权限 此命令用于获得权限</div><div class="line">git clone root@120.24.72.202:/home/my_project/my_project.git  //将裸仓中的内容复制出来</div></pre></td></tr></table></figure></p>
<h3>直接建立裸仓（里面无内容）</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cd /opt/git</div><div class="line">    $ mkdir project.git</div><div class="line">    $ cd project.git</div><div class="line">    $ git --bare init</div><div class="line"> $ cd myproject</div><div class="line">    $ git init</div><div class="line">    $ git add .</div><div class="line">    $ git commit -m &apos;initial commit&apos;</div><div class="line">    $ git remote add origin git@gitserver:/opt/git/project.git</div><div class="line">    $ git push origin master</div></pre></td></tr></table></figure></p>
<p>其他人的克隆和推送也一样变得很简单：
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git clone git@gitserver:/opt/git/project.git</div><div class="line">$ vim README</div><div class="line">$ git commit -am &apos;fix for the README file&apos;</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;首先配置自已的git&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo设置主题、配置</title>
    <link href="http://yoursite.com/2017/05/20/hexo%E8%AE%BE%E7%BD%AE%E4%B8%BB%E9%A2%98%E3%80%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/05/20/hexo设置主题、配置/</id>
    <published>2017-05-20T08:24:00.000Z</published>
    <updated>2017-05-21T02:24:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2>Next主题只显示摘要</h2>
<p>在首页，如果把每一篇文章的全部内容都显示出来的比较难看，所以可以配置让nexT主题只显示
文章标题和一部分摘，在nexT的配置文件_config.xml中，找到auto_excert:如下修改,false改为
true即可：</p>
<p>‘’’
auto_excerpt:
enable: true
length: 150
’’’</p>
<h2><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官网教程</a></h2>
<h2><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">NexT教程</a></h2>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;Next主题只显示摘要&lt;/h2&gt;
&lt;p&gt;在首页，如果把每一篇文章的全部内容都显示出来的比较难看，所以可以配置让nexT主题只显示
文章标题和一部分摘，在nexT的配置文件_config.xml中，找到auto_excert:如下修改,false改为
true即可：&lt;/p&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://yoursite.com/categories/Tutorial/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>markdown 基本语法</title>
    <link href="http://yoursite.com/2017/05/20/markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/05/20/markdown-基本语法/</id>
    <published>2017-05-20T07:00:45.000Z</published>
    <updated>2017-05-20T07:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、分段</strong> 	两个回车<br>
<strong>2、换行</strong> 	两个空格 + 回车<br>
<strong>3、标题</strong> 	#~###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题<br>
<strong>4、引用</strong> 	&gt;<br>
<strong>5、列表</strong>  	*，+，-，1.，选其中之一，注意后面有个空格<br>
<strong>6、代码区块</strong>  	四个空格开头<br>
<strong>7、链接</strong> 	[文字](链接地址)<br>
<strong>8、图片</strong> 	![图片说明](图片地址)，图片地址可以是本地路劲，也可以是网络地址<br>
<strong>9、强调</strong>  	**文字**，<strong>文字</strong>，<em>文字</em>，<em>文字</em>  //标记于文本之间不要空格<br>
<strong>10、代码</strong> 	```代码```   //Tab上面的那个键<br>
<strong>11、强调带+背景色</strong> 	`文字`<br>
<strong>12、自动连接</strong>  	&lt;www.baidu.com&gt;<br>
<strong>13、转移</strong> \ 使得markdown自带标记失效</p>
<p>##<a href="https://martinguo.github.io/blog/2015/08/19/Markdown-Syntax/" target="_blank" rel="external">Markdown详细教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1、分段&lt;/strong&gt; 	两个回车&lt;br&gt;
&lt;strong&gt;2、换行&lt;/strong&gt; 	两个空格 + 回车&lt;br&gt;
&lt;strong&gt;3、标题&lt;/strong&gt; 	#~###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题&lt;b
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>vim 常用快捷键</title>
    <link href="http://yoursite.com/2017/05/20/vim-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2017/05/20/vim-常用快捷键/</id>
    <published>2017-05-20T06:17:13.000Z</published>
    <updated>2017-05-20T06:57:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2>移动</h2>
<ul>
<li>h 左移</li>
<li>l 右移</li>
<li>j 下移</li>
<li>k 上移</li>
<li>w 移动一个单词</li>
<li>W 移动下一个单词开头，但忽略一些标点</li>
<li>e 前移一个单词，光标停在下一个单词末尾</li>
<li>E 移动到下一个单词末尾，如果词尾有标点，则移动到标点</li>
<li>0 移动到行首</li>
<li>$ 移动到行尾</li>
<li>gg 移动最前面</li>
<li>shift+g 移动到最后面</li>
</ul>
<h2>翻屏</h2>
<ul>
<li>crtl+f 下翻一屏</li>
<li>crtl+b 上翻一屏</li>
<li>zz 移动到屏幕最中央</li>
</ul>
<h2>复制、粘贴、删除</h2>
<ul>
<li>y 复制一行</li>
<li>:m,ny 复制m到n行</li>
<li>d 删除一行</li>
<li>:m,nd 剪切m到n行</li>
<li>p 粘贴</li>
</ul>
<h2>打开多个文件</h2>
<ul>
<li>:sp file  水平打开多个文件</li>
<li>:vsp file 垂直打开多个文件</li>
<li>ctrl+w 双击快速切换窗口</li>
<li>ctrl+w+j/k 快速上下切换</li>
<li>u 撤销</li>
<li>ctrl+r 反向撤销</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;移动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;h 左移&lt;/li&gt;
&lt;li&gt;l 右移&lt;/li&gt;
&lt;li&gt;j 下移&lt;/li&gt;
&lt;li&gt;k 上移&lt;/li&gt;
&lt;li&gt;w 移动一个单词&lt;/li&gt;
&lt;li&gt;W 移动下一个单词开头，但忽略一些标点&lt;/li&gt;
&lt;li&gt;e 前移一个单词，光标停在下一个
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2017/04/27/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/04/27/Hexo搭建个人博客/</id>
    <published>2017-04-27T14:59:31.000Z</published>
    <updated>2017-05-20T06:56:51.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>第一次用Hexo搭建个人博客，原来用的CSDN的博客，但是嫌弃它不够简洁，有点花哨,
所以趁有时间就想自已搭建一个博客。既然是第一篇文章，有必要把Hexo搭建博客的过程写下来</p>
</blockquote>
<h2>安装</h2>
<p>安装步骤如下：<br>
1、安装Hexo需要先安装下面应用程序(<strong>根据自已的系统选择安装方式，window和mac系统直接官网下载安装
，linux用户可以自带的安装程序安装</strong>)：</p>
<ul>
<li>Node.js</li>
<li>Git
2、运行如下命令</li>
<li>npm install -g hexo-cli</li>
</ul>
<h2>初始化</h2>
<p>选择一个目录，执行如下命令：</p>
<ul>
<li>hexo init Hexo<br>
Hexo 是你建立文件的名称，cd到Hexo的文件，执行如下命令：</li>
<li>npm install<br>
执行如下命令，就可以开启hexo服务器了（可以在本地访问）：</li>
<li>hexo s<br>
此时，在浏览器中打开网址http://localhost:4000,就能过看到如下页面
<img src="/2017/04/27/Hexo搭建个人博客/start_page.png" alt=""></li>
</ul>
<p>本地设置好了以后，接下来开始设置用github来访问我们的博客</p>
<h2>设置GitHub</h2>
<p>1、创建仓库<br>
登录你的Github帐号，新建仓库，名为用户名.github.io固定写法，如payne4handsome.github.io 即下图中1所示：
<img src="/2017/04/27/Hexo搭建个人博客/github_config.png" alt=""></p>
<p>2、配置部署信息
本地的Hexo的文件内容如下：</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">_config.yml    </div><div class="line">db.json </div><div class="line">node_modules </div><div class="line">package.json</div><div class="line">scaffolds</div><div class="line">source</div><div class="line">themes</div></pre></td></tr></table></figure></p>
<p>cd到Hexo的文件写，打开hexo的配置文件_config.xml，在配置文件的最后
做下面的这样的修改（这样hexo d命令可以直接把写的文章部署到我们git仓库上）</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/payne4handsome/payne4handsome.github.io</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<h2>写博客</h2>
<p>hexo命令的基本语法为：<br>
hexo  &lt;command&gt;</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">Commands:</div><div class="line">  clean     Removed generated files and cache.</div><div class="line">  config    Get or set configurations.</div><div class="line">  deploy    Deploy your website.</div><div class="line">  generate  Generate static files.</div><div class="line">  help      Get help on a command.</div><div class="line">  init      Create a new Hexo folder.</div><div class="line">  list      List the information of the site</div><div class="line">  migrate   Migrate your site from other system to Hexo.</div><div class="line">  new       Create a new post.</div><div class="line">  publish   Moves a draft post from _drafts to _posts folder.</div><div class="line">  render    Render files with renderer plugins.</div><div class="line">  server    Start the server.</div><div class="line">  version   Display version information.</div><div class="line"></div><div class="line">Global Options:</div><div class="line">  --config  Specify config file instead of using _config.yml</div><div class="line">  --cwd     Specify the CWD</div><div class="line">  --debug   Display all verbose messages in the terminal</div><div class="line">  --draft   Display draft posts</div><div class="line">  --safe    Disable all plugins and scripts</div><div class="line">  --silent  Hide output on console</div></pre></td></tr></table></figure></p>
<p>比如我们要创建一篇新的博客：</p>
<ul>
<li>hexo new 'hello world'<br>
然后我们找到Hexo的目录下面的source/_posts目录下面的‘hello world’.md开始编辑（markdown语法）</li>
<li>hexo g (同hexo generate)<br>
生产静态文件<br>
+hexo d（同hexo deploy）<br>
部署到github</li>
</ul>
<h2>总结</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo generate --watch //Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</div><div class="line">hexo generate --deploy //和下面的命令一样</div><div class="line">hexo deploy --generate</div></pre></td></tr></table></figure></p>
<p>上面的两个命令可以简写为：
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div><div class="line">hexo d -g</div></pre></td></tr></table></figure></p>
<h2>Questions</h2>
<p>一开始我用的hexo自动Markdown解析器，但是我在vim编辑文章时，如果我在vim中
换行，那么显示的页面就会换行，这样排版会难看（每一行字数可能不一样），那
么需要执行下面命令，安装新的Markdown解析器：
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm un hexo-renderer-marked --save</div><div class="line">npm i hexo-renderer-markdown-it --save</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第一次用Hexo搭建个人博客，原来用的CSDN的博客，但是嫌弃它不够简洁，有点花哨,
所以趁有时间就想自已搭建一个博客。既然是第一篇文章，有必要把Hexo搭建博客的过程写下来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;安装步
    
    </summary>
    
      <category term="Tutorial" scheme="http://yoursite.com/categories/Tutorial/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
